// ==UserScript==
// @name         –¢—É—Ä–±–æ–ü–í–ó FE: –ê–≤—Ç–æ-–ø–µ—á–∞—Ç—å
// @author SerhioVah
// @namespace    http://tampermonkey.net/
// @version      1.1.0407
// @description  –ê–≤—Ç–æ-–ø–µ—á–∞—Ç—å –Ω–æ–º–µ—Ä —è—á–µ–π–∫–∏ –ø—Ä–∏ –ø—Ä–∏–µ–º–∫–µ –≤ –¢—É—Ä–±–æ–ü–í–ó (ozon)
// @match        https://turbo-pvz.ozon.ru/*
// @grant        none
// @icon         https://www.google.com/s2/favicons?sz=64&domain=ozon.ru
// @updateURL    https://raw.githubusercontent.com/SerhioV/TurboPVZAutoPrint/refs/heads/main/main_userscript.js
// @downloadURL  https://raw.githubusercontent.com/SerhioV/TurboPVZAutoPrint/refs/heads/main/main_userscript.js
// ==/UserScript==

(function() {
    'use strict';

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
    const SELECTOR = '[data-testid="logItemPlace"]'; // CSS-—Å–µ–ª–µ–∫—Ç–æ—Ä –¥–ª—è —è—á–µ–µ–∫
    const CHECK_INTERVAL = 1000; // –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤—ã—Ö —è—á–µ–µ–∫ –≤ –º—Å

    // –°–ø–∏—Å–æ–∫ —Ñ—Ä–∞–∑, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –Ω–µ–ª—å–∑—è –ø–µ—á–∞—Ç–∞—Ç—å (–≤ –Ω–∞—á–∞–ª–µ —Å—Ç—Ä–æ–∫–∏)
    const bannedLabels = [
        '–†–∞—Å—Ö–æ–¥–Ω–∏–∫–∏',
        '–ü—Ä—è–º–æ–π –ø–æ—Ç–æ–∫',
        '–ù–∞ –ø—Ä–æ–≤–µ—Ä–∫—É',
        '–í–æ–∑–≤—Ä–∞—Ç',
        '–í–æ–∑–≤—Ä–∞—Ç—ã –ü–æ—á—Ç—ã'
    ];

    let lastPrintedText = null;      // –ü–æ—Å–ª–µ–¥–Ω–∏–π –Ω–∞–ø–µ—á–∞—Ç–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
    let forcePrintMode = false;      // –†–µ–∂–∏–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –ø–µ—á–∞—Ç–∏ (–∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç —Ñ–∏–ª—å—Ç—Ä—ã)
    let labelWidth = 58;             // –®–∏—Ä–∏–Ω–∞ —ç—Ç–∏–∫–µ—Ç–∫–∏ –≤ –º–º
    let labelHeight = 50;            // –í—ã—Å–æ—Ç–∞ —ç—Ç–∏–∫–µ—Ç–∫–∏ –≤ –º–º

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç HTML –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø–µ—á–∞—Ç—å –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ —è—á–µ–π–∫–∏
    function printText(cellText) {
        const printHtml = `
            <!DOCTYPE html>
            <html>
            <head>
                <title>–ü–µ—á–∞—Ç—å</title>
                <style>
                    @page { size: ${labelWidth}mm ${labelHeight}mm; margin: 0; }
                    body {
                        margin: 0;
                        padding: 0;
                        display: flex;
                        justify-content: center;
                        align-items: center;
                        height: ${labelHeight}mm;
                        width: ${labelWidth}mm;
                        font-family: Arial, sans-serif;
                    }
                    .cell {
                        font-size: 35vmin;
                        font-weight: bold;
                        text-align: center;
                        width: 100%;
                        word-wrap: break-word;
                    }
                </style>
            </head>
            <body>
                <div class="cell">${cellText}</div>
            </body>
            </html>
        `;

        const printWindow = window.open('', '_blank', 'width=600,height=500');
        printWindow.document.write(printHtml);
        printWindow.document.close();

        setTimeout(() => {
            printWindow.print();
            printWindow.close();
            console.log('[AUTO-PRINT] –ü–µ—á–∞—Ç—å –∑–∞–≤–µ—Ä—à–µ–Ω–∞:', cellText);
        }, 500);
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤–æ–π —è—á–µ–π–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ—ë –≤ –ø–µ—á–∞—Ç—å, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    function printCellNumber() {
        const cellElement = document.querySelector(SELECTOR);
        console.log('[AUTO-PRINT] –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–∞:', cellElement);

        if (cellElement && !cellElement.dataset.printed) {
            const cellText = cellElement.textContent.trim();
            console.log('[AUTO-PRINT] –ù–∞–π–¥–µ–Ω —Ç–µ–∫—Å—Ç —è—á–µ–π–∫–∏:', cellText);

            if (!forcePrintMode) {
                // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ñ—Ä–∞–∑—ã-–∏—Å–∫–ª—é—á–µ–Ω–∏—è –≤ –Ω–∞—á–∞–ª–µ —Ç–µ–∫—Å—Ç–∞
                const normalizedText = cellText.toLowerCase();
                const shouldSkip = bannedLabels.some(label => normalizedText.startsWith(label.toLowerCase()));
                if (shouldSkip) {
                    console.log('[AUTO-PRINT] –ü—Ä–æ–ø—É—Å–∫ –ø–µ—á–∞—Ç–∏ ‚Äî —è—á–µ–π–∫–∞ –≤ —Å–ø–∏—Å–∫–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–π:', cellText);
                    return;
                }

                // –ü—Ä–æ–≤–µ—Ä–∫–∞, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ –±–ª–æ–∫ —Ñ—Ä–∞–∑—É –æ —Ç–æ–º, —á—Ç–æ –ø—Ä–µ–¥–º–µ—Ç —É–∂–µ –Ω–∞ —Å–∫–ª–∞–¥–µ
                const duplicateText = "–ü—Ä–µ–¥–º–µ—Ç —É–∂–µ —á–∏—Å–ª–∏—Ç—Å—è –Ω–∞ —Å–∫–ª–∞–¥–µ";
                const logBlock = cellElement.closest('[data-testid="logItemBlock"]');
                if (logBlock && logBlock.textContent.includes(duplicateText)) {
                    console.log('[AUTO-PRINT] –ü—Ä–æ–ø—É—Å–∫ –ø–µ—á–∞—Ç–∏ ‚Äî –¥—É–±–ª–∏–∫–∞—Ç/–ø–æ–≤—Ç–æ—Ä:', cellText);
                    return;
                }
            } else {
                console.log('[AUTO-PRINT] –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—á–∞—Ç—å –≤–∫–ª—é—á–µ–Ω–∞ ‚Äî —Ñ–∏–ª—å—Ç—Ä—ã –æ—Ç–∫–ª—é—á–µ–Ω—ã');
            }

            cellElement.dataset.printed = 'true';
            lastPrintedText = cellText;
            console.log('[AUTO-PRINT] –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ –ø–µ—á–∞—Ç—å:', cellText);

            printText(cellText);
        }
    }

    // –°–æ–∑–¥–∞—ë—Ç UI-–∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è (–≤ –ø—Ä–∞–≤–æ–º –Ω–∏–∂–Ω–µ–º —É–≥–ª—É)
    function createUI() {
        const togglePanelBtn = document.createElement('button');
        togglePanelBtn.textContent = 'üñ®Ô∏è';
        togglePanelBtn.style.cssText = `
            position: fixed;
            bottom: 10px;
            right: 10px;
            z-index: 10000;
            font-size: 22px;
            border-radius: 50%;
            width: 48px;
            height: 48px;
            border: none;
            background: #1dae40;
            color: white;
            cursor: pointer;
        `;

        const container = document.createElement('div');
        container.style.cssText = `
            position: fixed;
            bottom: 70px;
            right: 10px;
            z-index: 9999;
            display: none;
            flex-direction: column;
            gap: 8px;
            font-family: Arial, sans-serif;
            background: white;
            border: 1px solid #ccc;
            border-radius: 8px;
            padding: 10px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        `;

        togglePanelBtn.onclick = () => {
            container.style.display = container.style.display === 'none' ? 'flex' : 'none';
        };

        // –ü–æ–≤—Ç–æ—Ä –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø–µ—á–∞—Ç–∏
        const repeatButton = document.createElement('button');
        repeatButton.textContent = 'üîÅ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–µ—á–∞—Ç—å';
        repeatButton.style.cssText = buttonStyle();
        repeatButton.onclick = () => {
            if (lastPrintedText) {
                console.log('[AUTO-PRINT] –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–µ—á–∞—Ç—å:', lastPrintedText);
                printText(lastPrintedText);
            } else {
                alert('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–µ—á–∞—Ç–∏');
            }
        };

        // –í–∫–ª—é—á–µ–Ω–∏–µ/–æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –ø–µ—á–∞—Ç–∏
        const toggleForceButton = document.createElement('button');
        toggleForceButton.textContent = '‚öôÔ∏è –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—á–∞—Ç—å: –≤—ã–∫–ª';
        toggleForceButton.style.cssText = buttonStyle();
        toggleForceButton.onclick = () => {
            forcePrintMode = !forcePrintMode;
            toggleForceButton.textContent = `‚öôÔ∏è –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—á–∞—Ç—å: ${forcePrintMode ? '–≤–∫–ª' : '–≤—ã–∫–ª'}`;
            toggleForceButton.style.background = forcePrintMode ? '#f88f14' : '#005bff';
            console.log('[AUTO-PRINT] –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—á–∞—Ç—å –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∞:', forcePrintMode);
        };

        // –†—É—á–Ω–æ–π –≤–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ —è—á–µ–π–∫–∏
        const manualButton = document.createElement('button');
        manualButton.textContent = '‚úèÔ∏è –†—É—á–Ω–æ–π –≤–≤–æ–¥ –∏ –ø–µ—á–∞—Ç—å';
        manualButton.style.cssText = buttonStyle();
        manualButton.onclick = () => {
            const manualText = prompt('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —è—á–µ–π–∫–∏ –¥–ª—è –ø–µ—á–∞—Ç–∏:');
            if (manualText) {
                lastPrintedText = manualText.trim();
                printText(lastPrintedText);
            }
        };

        // –ó–∞–¥–∞—Ç—å —Ä–∞–∑–º–µ—Ä —ç—Ç–∏–∫–µ—Ç–∫–∏ –≤—Ä—É—á–Ω—É—é
        const resizeButton = document.createElement('button');
        resizeButton.textContent = 'üìê –ó–∞–¥–∞—Ç—å —Ä–∞–∑–º–µ—Ä —ç—Ç–∏–∫–µ—Ç–∫–∏';
        resizeButton.style.cssText = buttonStyle();
        resizeButton.onclick = () => {
            const w = prompt('–®–∏—Ä–∏–Ω–∞ —ç—Ç–∏–∫–µ—Ç–∫–∏ –≤ –º–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, 58):', labelWidth);
            const h = prompt('–í—ã—Å–æ—Ç–∞ —ç—Ç–∏–∫–µ—Ç–∫–∏ –≤ –º–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, 50):', labelHeight);
            if (w && h && !isNaN(w) && !isNaN(h)) {
                labelWidth = parseFloat(w);
                labelHeight = parseFloat(h);
                alert(`–ù–æ–≤—ã–π —Ä–∞–∑–º–µ—Ä —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${labelWidth}–º–º x ${labelHeight}–º–º`);
                console.log('[AUTO-PRINT] –†–∞–∑–º–µ—Ä —ç—Ç–∏–∫–µ—Ç–∫–∏ –æ–±–Ω–æ–≤–ª—ë–Ω:', labelWidth, labelHeight);
            } else {
                alert('–ù–∞–ø–∏—à–∏—Ç–µ —Ä–∞–∑–º–µ—Ä—ã —ç—Ç–∏–∫–µ—Ç–∫–∏ —Ü–∏—Ñ—Ä–∞–º–∏. –ê—Ä–∞–±—Å–∫–∏–º –ø–æ–∂–∞–ª—É–π—Å—Ç–∞~. -–ü–æ–∫–æ—Ä–Ω—ã–π —Å–ª—É–≥–∞, –°–∫—Ä–∏–ø—Ç.');
            }
        };

        container.appendChild(repeatButton);
        container.appendChild(toggleForceButton);
        container.appendChild(manualButton);
        container.appendChild(resizeButton);

        document.body.appendChild(togglePanelBtn);
        document.body.appendChild(container);
    }

    // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –±–∞–∑–æ–≤—ã–µ —Å—Ç–∏–ª–∏ –∫–Ω–æ–ø–∫–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    function buttonStyle() {
        return `
            padding: 10px 12px;
            font-size: 16px;
            background: #005bff;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        `;
    }

    // –ì–æ—Ä—è—á–∞—è –∫–ª–∞–≤–∏—à–∞ Shift+P = –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–µ—á–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–π —è—á–µ–π–∫–∏
    document.addEventListener('keydown', (e) => {
        if (e.shiftKey && e.code === 'KeyP') {
            if (lastPrintedText) {
                console.log('[AUTO-PRINT] –ì–æ—Ä—è—á–∞—è –∫–ª–∞–≤–∏—à–∞ ‚Äî –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–µ—á–∞—Ç—å:', lastPrintedText);
                printText(lastPrintedText);
            } else {
                alert('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–µ—á–∞—Ç–∏');
            }
        }
    });

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    createUI();
    setInterval(printCellNumber, CHECK_INTERVAL);
})();
